[GYRO]
# Aircraft coordinate system (B) Sensor coordinate system (C) conversion Quaternion, including sensor misalignment
q_b2c(0) = 0.0
q_b2c(1) = 0.0
q_b2c(2) = 0.0
q_b2c(3) = 1.0

# Scale factor (3 Ã— 3 matrix), (0,0), (0,1), (0,2), ....
# Multiplied after conversion to sensor coordinate system.
ScaleFactor(0) = 1.0
ScaleFactor(1) = 0.0
ScaleFactor(2) = 0.0
ScaleFactor(3) = 0.0
ScaleFactor(4) = 1.0
ScaleFactor(5) = 0.0
ScaleFactor(6) = 0.0
ScaleFactor(7) = 0.0
ScaleFactor(8) = 1.0

#Bias stationary component (3D vector)
#Component coordinate system
Bias_c(0) = 1.0e-3
Bias_c(1) = -1.0e-3
Bias_c(2) = 2.0e-3

#Range
#Step width [s] to be passed to ODE <3>
rw_stepwidth = 0.1

# Random standard deviation [rad / s]
rw_stddev_c(0) = 0.0
rw_stddev_c(1) = 0.0
rw_stddev_c(2) = 0.0

# Random limit [rad / s]
rw_limit_c(0) = 0.0
rw_limit_c(1) = 0.0
rw_limit_c(2) = 0.0

# Gaussian noise standard deviation [rad / s]
nr_stddev_c(0) = 1e-3
nr_stddev_c(1) = 1e-3
nr_stddev_c(2) = 1e-3

#measure function Returns x if -range_to_const <x <range_to_const for the value x immediately before the final angular velocity output,
#If -range_to_zero <x <-range_to_const, range_to_const <x <range_to_zero, return range_to_const,
#Returns 0 if x <-range_to_zero, range_to_zero <x. The unit is [rad / s].

# Positive, must be smaller than Range_to_zero.
Range_to_const = 5.0
Range_to_zero = 10.0

# Consumo [A]
current = 0.05;

